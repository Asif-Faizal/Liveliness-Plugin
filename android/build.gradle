group = "com.innovitegra.livelines_detection"
version = "1.0-SNAPSHOT"

buildscript {
    ext.kotlin_version = "1.8.22"
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath("com.android.tools.build:gradle:8.1.0")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

android {
    namespace = "com.innovitegra.livelines_detection"

    compileSdk = 35

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    defaultConfig {
        minSdk = 21
        targetSdk = 35

        consumerProguardFiles("consumer-rules.pro")
    }

    dependencies {
        implementation("androidx.core:core-ktx:1.12.0")
        implementation("androidx.annotation:annotation:1.7.0") // Required for Flutter plugins

        // CameraX dependencies
        def camerax_version = "1.3.0"
        implementation ("androidx.camera:camera-camera2:1.1.0")
        implementation("androidx.camera:camera-core:$camerax_version")
        implementation("androidx.camera:camera-view:$camerax_version")
        implementation("androidx.camera:camera-lifecycle:$camerax_version")

        // Lifecycle dependencies
        implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.6.1")

        // AppCompat dependency
        implementation("androidx.appcompat:appcompat:1.6.1")

        // ML Kit Face Detection dependency
        implementation 'com.google.mlkit:face-detection:16.0.0'

        // Test dependencies
        testImplementation("org.jetbrains.kotlin:kotlin-test")
        testImplementation("org.mockito:mockito-core:5.0.0")
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen { false }
                showStandardStreams = true
            }
        }
    }
}
